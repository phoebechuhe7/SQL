-- In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 
-

-- The number of orders placed in January 
SELECT count(orderID) 
FROM Bit_DB.JanSales 
WHERE length(orderID) = 6 
AND orderID <> "Order ID";


-- 1. How many orders were placed in January?
SELECT COUNT(*) 
FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID' 
AND length(orderID) = 6; 

-- 2. How many of those orders were for an iPhone? 
SELECT COUNT(*)
FROM BIT_DB.JanSales
WHERE Product = 'iPhone' 
AND orderID <> 'Order ID' 
AND length(orderID) = 6;

-- 3. Select the customer account numbers for all the orders that were placed in February. 
SELECT distinct customers.acctnum 
FROM BIT_DB.customers customers
JOIN BIT_DB.FebSales Feb
ON customers.order_id = Feb.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID'; 

-- 4. Which product was the cheapest one sold in January, and what was the price?
SELECT distinct Product, Price
FROM BIT_DB.JanSales 
ORDER BY Price 
LIMIT 1;

-- 5. What is the total revenue for each product sold in January?
SELECT Product
, SUM(Quantity)*Price as Revenue 
FROM BIT_DB.JanSales 
GROUP BY Product; 

-- 6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product
, SUM(Quantity), SUM(Quantity)*Price as Revenue 
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product; 


-- 7. Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT location, count(orderID) 
FROM Bit_DB.JanSales
WHERE location like "%NY%"
AND length(orderid) = 6 
AND orderid <> "Order ID"
GROUP BY location
HAVING count(orderID) > 2;


-- 7.How many customers ordered more than 2 products at a time, and what was the average amount spent for those customers? 
SELECT COUNT(distinct Customers.acctnum), 
AVG(Quantity*Price) as average_amount_spent
FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers Customers
ON Customers.order_id = Feb.orderID
WHERE Feb.Quantity > 2
AND length(orderid) = 6 
AND orderid <> 'Order ID';


-- 8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, Quantity
FROM BIT_DB.FebSales 
WHERE location LIKE '%LA%'
GROUP BY Product;

-- 9.  Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT location, 
COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
AND length(orderID) = 6 
AND orderID <> "Order ID"
GROUP BY location
HAVING COUNT(orderID) > 2;


-- 10. How many of each type of headphone were sold in February?
SELECT Product,
SUM(Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE '%headphones%'
AND orderID <> 'Order ID'
AND length(orderID) = 6
GROUP BY Product; 


-- 11. What was the average amount spent per account in February?
SELECT SUM(Feb.quantity*Feb.price)/COUNT(Cust.acctnum)
FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers Cust
ON Cust.order_id = Feb.orderID
WHERE orderID <> 'Order ID'
AND length(orderID) = 6;


-- 12. What was the average quantity of products purchased per account in February?

SELECT SUM(Feb.quantity)/COUNT(Cust.acctnum) as average_quantity_purchased
FROM BIT_DB.FebSales Feb
JOIN BIT_DB.customers Cust
ON Cust.order_id = Feb.orderID
WHERE orderID <> 'Order ID'
AND length(orderID) = 6;

- 13. Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product, 
SUM(Quantity*Price) as Revenue
FROM BIT_DB.JanSales 
WHERE orderID <> 'Order ID'
AND length(orderID) = 6
GROUP BY Product
ORDER BY Revenue DESC
LIMIT 1;



